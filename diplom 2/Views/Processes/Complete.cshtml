@model diplom_2.Models.Process

<script type="text/javascript" src="~/ckeditor/ckeditor.js"></script>
@{ 
    Layout = null;
}
<script src="~/js/jquery-1.11.1.min.js"></script>

<div class="modal-content" style="padding: 10px;">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title" id="myModalLabel">Отчёт о выполнении задачи</h4>
    </div>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "CompleteForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" style="padding-top: 10px">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.IsExecuted)



            <div class="form-group">
                @Html.LabelFor(model => model.ExecuteDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExecuteDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExecuteDate, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExecuteDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExecuteDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.ExecuteDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExecuteDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @if (Model.IsExecuted == true)
                    { 
                        <input type="submit" value="Выполнить задачу" class="btn btn-default" />
                    }
                    else
                    {
                        <input type="submit" value="Отклонить задачу" class="btn btn-default" />
                    }
                </div>
            </div>
        </div>
    }

    <div>
        <button id="CloseButton" type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
    </div>
   
    <script src="~/js/jquery-ui-1.10.3.min.js"></script>
   


    
    <script>

        var frm = $('#CompleteForm');

        frm.submit(function (e) {

            e.preventDefault();
            CKEDITOR.instances['Description'].updateElement();
            CKEDITOR.instances['ExecuteDescription'].updateElement();
            //alert($('#ExecuteDate').val());
            //alert(CKEDITOR.instances['Description'].getData());
            $.ajax({
                type: frm.attr('method'),
                url: frm.attr('action'),
                data: frm.serialize(),
                success: function (data) {
                    $('#CloseButton').trigger('click');
                    UpdateProccessList();
                    //$.ajax({
                    //    type: "GET",
                    //    url: '/Processes/ShowProcesses/' + data,
                    //    cache: false,
                    //    success: function (response) {
                    //        if ($('#ProcesseList_' + data).length == 0)
                    //            $('#ProcesseList').html(response);
                    //        else
                    //            $('#ProcesseList_' + data).html(response);
                    //    },
                    //    error: function (response) {
                    //        alert("Error");
                    //    }
                    //})
                  
                },
                error: function (data) {
                    alert('An error occurred.');
                    alert(data);
                },
            });
        });

        (function () {
            $("#ui-datepicker-div").remove();
            $("#ExecuteDate").datepicker({ dateFormat: 'dd.mm.yy' });
            var editor2 = CKEDITOR.replace('Description');         
            var editor3 = CKEDITOR.replace('ExecuteDescription');
        })();
      
    </script>
</div>