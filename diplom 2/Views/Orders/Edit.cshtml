@model diplom_2.Models.Order

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript" src="~/ckeditor/ckeditor.js"></script>

<div class="pageheader">
    <h2><i class="fa fa-dollar"></i> Заявка <span></span></h2>
    <div class="breadcrumb-wrapper">
        @*<span class="label">Вы тут:</span>*@
        <ol class="breadcrumb">
            <li><a href="index.html">Скобка</a></li>
            <li><a href="index.html">Страницы</a></li>
            <li class="active">Заявка</li>
        </ol>
    </div>
</div>

<div class="contentpanel">

    <div class="panel panel-default">
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-6">

                    <h5 class="subtitle mb10">От</h5>
                    <img src="images/themeforest.png" class="img-responsive mb10" alt="" />
                    <address>
                        <strong>ThemeForest Web Services, Inc.</strong><br>
                        795 Folsom Ave, Suite 600<br>
                        San Francisco, CA 94107<br>
                        <abbr title="Phone">P:</abbr> (123) 456-7890
                    </address>

                </div><!-- col-sm-6 -->

                <div class="col-sm-6 text-right">
                    <h5 class="subtitle mb10">Кому</h5>
                    <address>
                        <strong>@ViewBag.Counterparty.Name</strong><br>
                        @ViewBag.Counterparty.Address    <br>

                        @ViewBag.Counterparty.City<br>
                        @if (ViewBag.FirstContact != null)
                        {
                            <abbr title="Contacts"></abbr> @ViewBag.FirstContact.FIO
                        }
                    </address>

                    <p><strong>Дата создания заявки:</strong> @DateTime.Now.ToString("yyyy-MM-dd");</p>
                    @*<p><strong>Due Date:</strong> January 22, 2014</p>*@

                </div>
            </div><!-- row -->
            @using (Html.BeginForm())
            {

                @Html.AntiForgeryToken()
                <input type="hidden" name="Counterparty_Id" id="Counterparty_Id" value="@ViewBag.CounterpartyId" />
                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="form-group">
                        @Html.LabelFor(model => model.ReadyDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">

                            <div class="input-group">
                                <input type="text" class="form-control" id="datepicker" name="ReadyDate" value="@DateTime.Now.AddDays(14).ToShortDateString()">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                            </div>
                            @Html.ValidationMessageFor(model => model.ReadyDate, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <label class="col-sm-2 control-label">Модель</label>
                        <div class="col-sm-8">
                            <select id="selectList" class="select2" data-placeholder="Выберете или введите название модели">
                                <option id="SelectedProduct" value=""></option>
                                @foreach (var product in diplom_2.Models.Product.GetProductFromSiteDb())
                {
                                    <option model="@product.title" value="@product.nid">@product.title</option>
                                }
                            </select>

                        </div>
                        <div class="col-sm-2">
                            <input onclick="AddToOrder()" class="btn btn-primary mr5" type="button" value="Добавить в заявку" id="AddToOrderButton" />
                        </div>
                    </div>

                    @*<div class="form-group">
                            <div class="col-md-offset-2 col-md-10">

                            </div>
                        </div>*@
                </div>
              

                <script>
                var CurrentRow = @Model.Products.Count;
                    function AddToOrder() {
                        var ProductName = $('#select2-selectList-container').attr('title');
                       
                        if (ProductName == undefined)
                            return;

                        var ProductId = $('#selectList').find(":selected").val();
                //$('#selectList').val(null).trigger('change');
                //$('#tbody').append('<tr><td><div class="text-primary"><strong>' + ProductName + '</strong></div></td ><td></td><td>$99.00</td><td>$99.00</td></tr >');
                $('#tbody').append('<tr class="row" id="Row_' + CurrentRow + '"><td class="col-md-5"><input name="ProductId" type="hidden" value="' + ProductId + '"><div class="text-primary"><input type="hidden" name="ProductName" value="' + ProductName + '"><strong>' + ProductName + '</strong></div></td ><td  class="col-md-3"><input style="width: 100%" type="text" name="MatColor"></td><td  class="col-md-2"><input style="width: 100%"  type="text" name="Size"></td><td  class="col-md-1"><input style="width: 100%"  type="text" name="amount"></td><td  class="col-md-1"><div style="cursor: pointer" onclick="RemoveRow(' + CurrentRow + ')">X</div></td></tr>');
                        CurrentRow++;
                    }



                    function RemoveRow(V)
            {
                $("#Row_" + V).remove();
                    }
                </script>
                <div class="table-responsive">
                    <table class="table table-invoice">
                        <thead>
                            <tr class="row">
                                <th class="col-md-5">Модель</th>
                                <th class="col-md-3">Тип ткани, цвет</th>
                                <th class="col-md-2">Размер</th>
                                <th class="col-md-1">Количество</th>
                                <th class="col-md-1"></th>
                            </tr>
                        </thead>
                        <tbody id="tbody">

                            @*<tr>
                                    <td>
                                        <div class="text-primary"><strong>Wordpress Template Customization</strong></div>
                                        <small>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam</small>
                                    </td>
                                    <td>1</td>
                                    <td>$99.00</td>
                                    <td>$99.00</td>
                                </tr>*@
                        </tbody>
                    </table>
                    @Html.ValidationMessageFor(model => model.Products, "", new { @class = "text-danger" })
                </div><!-- table-responsive -->
                <hr />
                <div class="form-group">
                    <div class="col-md-2">
                        Примечание
                    </div>
                    <div class="col-md-10">
                        <textarea name="Comments" id="Comments" style="width:100%" >@Model.Comments</textarea>
                    </div>
                </div>

                <div id="ImageContainer">
                    <div id="FormGroup1" class="form-group">

                        <div class="control-label col-md-2">
                            <b>Выберете изображение</b>
                        </div>
                        <div class="col-md-5">
                            <input id="Image1Url" name="Image1Url" type="file" onchange="ImageChange(1)" style="float: left;" />
                        </div>
                        @*<div class="col-md-1">
                                 Примечание
                            </div>
                            <div class="col-md-4">
                                <input name="notes" type="text" />
                            </div>*@
                        <img id="Slide1" src="" width="200px" />
                    </div>
                </div>  


                int CurrentRow = 0;
                foreach (var product in Model.Products)
                {
                    <script>                      
                        $('#tbody').append('<tr class="row" id="Row_' + @CurrentRow + '"><td class="col-md-5"><input name="ProductId" type="hidden" value="' + @product.Id + '"><div class="text-primary"><input type="hidden" name="ProductName" value="' + '@product.Name' + '"><strong>' + '@product.Name' + '</strong></div></td ><td  class="col-md-3"><input style="width: 100%" type="text" name="MatColor" value="@product.Color"></td><td  class="col-md-2"><input style="width: 100%"  type="text" name="Size" value="@product.Size"></td><td  class="col-md-1" ><input style="width: 100%"  type="text" name="amount" value="@product.Quantity"></td><td  class="col-md-1"><div style="cursor: pointer" onclick="RemoveRow(' + @CurrentRow + ')">X</div></td></tr>');
                    </script>
                    CurrentRow++;
                }

                <script>
               var editor = CKEDITOR.replace('Comments');



            function ImageChange(n) {
                var file = $('#Image1Url').get(0).files[0];
                var fileData = new FormData();
                fileData.append(file.name, file);
                    $.ajax({
                        url: '/Orders/UploadImage', //куда отправляем запрос (в какой actio-метод какого контроллера)
                        type: "POST", //типа
                        data: fileData, //форма с данными
                        //чтобы протокол HTTP не исказил передаваемый файл, отключаем все флаги преобразований
                        contentType: false, //тип данных не указан
                        processData: false, //данные не нужно обрабатывать
                        success: function (result) {

                            var html = "<img src='../../OrdersImages/" + result + "'/>";

                           // editor.insertHtml(html);

                            var newElement = CKEDITOR.dom.element.createFromHtml(html, editor.document);
                            editor.insertElement(newElement);



                            //alert(result);
                            //$('#Slide' + number).attr('src', '../../OrdersImages/' + result);
                            //$('#InputImage' + number + 'Url').val(result);
                        },
                        error: function (err) {
                            alert(err.statusText);
                        }
                    })


            }

            //function FileUpload(number) {
            //    //Ищем тег по id input с выбранным файлом.
            //    //Поиск тегов может дать в результате не один тег а сразу несколько,
            //    //но мы точно знаем, что может только один тег с указанным Id
            //    //поэтому получаем из массива объектов нулевое, т.е. первый и единственный с помощью функции .get(0)
            //    //Найденный тег - это input с типом file, в котором может быть выбрано несколько файлов, если включен
            //    //соответствующий атрибут multiple. Но у нас этот атрибут не используется, хотя
            //    //получить можно только через массив файлов. Поэтому извлекаем из массива нулевый и единственный файл .files[0]
            //    ///И запоминаем в переменную file.
            //    var file = $('#Image' + number + 'Url').get(0).files[0];

            //    //Для отправки данных на сервер нужно использовать Post-запрос.
            //    //Post-запрос можно отправить на сервер двумя способами:
            //    //- через кнопку submit в форме, причём будут взяты данные из всех input-ов формы
            //    //- с помощью javascript с применением ajax.
            //    //Сейчас мы должны отправить данные (файл) с помощью ajax пост-запроса на сервер, при этом
            //    //для input-ов с выбранными файлами формы не используются.

            //    //Но для отправки post форма всё равно нужна. Поэтому создадим такую "виртуальную" форму
            //    //для отправки запроса. Такая виртуальная формаи называется объектом типа FormData.
            //    var fileData = new FormData();

            //    //В виртуальную форму данных добавляем пару "ключ/значение", где ключом выступает имя файла,
            //    //а значаем сам файл (скорее всего в байтовом виде).
            //    fileData.append(file.name, file);


            //    //Отправляем пост-запрос с помощью ajax
            //    $.ajax({
            //        url: '/Orders/UploadImage', //куда отправляем запрос (в какой actio-метод какого контроллера)
            //        type: "POST", //типа
            //        data: fileData, //форма с данными
            //        //чтобы протокол HTTP не исказил передаваемый файл, отключаем все флаги преобразований
            //        contentType: false, //тип данных не указан
            //        processData: false, //данные не нужно обрабатывать
            //        success: function (result) {
            //            //alert(result);
            //            $('#Slide' + number).attr('src', '../../OrdersImages/' + result);
            //            $('#InputImage' + number + 'Url').val(result);
            //        },
            //        error: function (err) {
            //            alert(err.statusText);
            //        }
            //    })
            //}

            //var AmountImages = 1;
            //var LastImage = 1;
            //function ImageChange(n) {

            //    $('#FormGroup' + n + '> .col-md-10').append('<br><hr><div onclick="DeleteImage(' + LastImage +
            //            ')" style="font-size: 25px; cursor: pointer; width: 25px; float: left">x</div>')
            //    LastImage++;

            //    FileUpload(n);
            //    n++;
            //    $("#ImageContainer").append('<div id="FormGroup' + LastImage +
            //        '" class="form-group"><div class="control-label col-md-2"><b>Image ' + LastImage +
            //        '</b></div> <div class="col-md-10"><input id="Image' + LastImage +
            //        'Url" name="Image' + LastImage +
            //        'Url" type="file" onchange="ImageChange(' + LastImage +
            //        ')" style="float: left;" /></div><img id="Slide' + LastImage +
            //        '" src="" width="200px" /></div>' +
            //        '<input type="hidden" id="InputImage' + LastImage + 'Url" name="FileName" >'
            //        );
            //    AmountImages++;



            //}
            //function DeleteImage(n) {
            //    $('#FormGroup' + n).remove();
            //    AmountImages--;
            //}
                </script>

                <div class="text-right btn-invoice">

                    <input class="btn btn-primary mr5" type="submit" value="Создать заявку" />
                    @*<button <i class="fa fa-dollar mr5"></i> Make A Payment</button>*@
                    <button class="btn btn-white"><i class="fa fa-print mr5"></i> Распечатать</button>
                </div>

                <div class="mb40"></div>



            }
        </div><!-- panel-body -->
    </div><!-- panel -->

</div>


@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
@*<script src="~/js/select2.min.js"></script>*@
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
<script>
    jQuery(document).ready(function () {
        jQuery('#datepicker').datepicker({ dateFormat: 'dd.mm.yy' });

        // Select2
        jQuery(".select2").select2({
            //width: '100%'
            tags: true
        });
    })
</script>

@*@model diplom_2.Models.Order

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.InvoiceUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvoiceUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InvoiceUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChangeDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChangeDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChangeDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReadyDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReadyDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReadyDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Counterparty_Id, "Counterparty_Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Counterparty_Id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Counterparty_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusOrder_Id, "StatusOrder_Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StatusOrder_Id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusOrder_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
